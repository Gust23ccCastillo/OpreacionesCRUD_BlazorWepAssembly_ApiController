@page "/fetchdata"
@attribute [Authorize(Roles ="Administrator,User")]
@using OpreacionesCRUD_BlazorWepAssembly_ApiController.Shared
@inject HttpClient Http
@inject AuthenticationStateProvider _AuthStateProvider
@inject NavigationManager _NavegateManager

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        var customStateProvider = (CustomAuthenticationStateProvider)_AuthStateProvider;
        var Token = await customStateProvider.GetToken();
        if (!string.IsNullOrWhiteSpace(Token))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", Token);
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        }
        else
        {
            _NavegateManager.NavigateTo("/loginUsuario");
        }

    }
}
