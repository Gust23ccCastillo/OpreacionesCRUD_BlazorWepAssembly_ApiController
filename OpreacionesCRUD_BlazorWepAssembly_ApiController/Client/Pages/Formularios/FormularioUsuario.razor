@inject HttpClient _http
<EditForm Model="@_UsuarioGeneral" OnValidSubmit="@OnValidSumit">
     <div class="form-field">
         <label>Nombre:</label>
         <div>
             <InputText @bind-Value="@_UsuarioGeneral.Nombre"/>
             <ValidationMessage For="@(()=>_UsuarioGeneral.Nombre)"/>
         </div>

          <label>Correo:</label>
         <div>
             <InputText @bind-Value="@_UsuarioGeneral.Correo"/>
             <ValidationMessage For="@(()=>_UsuarioGeneral.Correo)"/>
         </div>

          <label>PassWord Usuario:</label>
         <div>
             <InputText @bind-Value="@_UsuarioGeneral.Clave"/>
             <ValidationMessage For="@(()=>_UsuarioGeneral.Clave)"/>
         </div>

          <label>Roles Usuario:</label>
           <div>
                <InputSelect class="form-select" @bind-Value="@_UsuarioGeneral.Roles"> 
                    <option value="Estudiante" selected>Estudiante</option>
                    <option value="Administrador" selected>Administrador</option>
                    <ValidationMessage For="@(()=>_UsuarioGeneral.Roles)"/>
                   
                
                </InputSelect>
           </div>

          @*<div>
              <InputSelect class="form-select" @bind-Value="@_UsuarioGeneral.CarreraEstudianteList">
                @foreach (var carreraSelect in @_Carreras)
                {
                <option value="@carreraSelect.NombreCarrera" selected>@carreraSelect.NombreCarrera</option>

                }

              </InputSelect>
          </div>*@

         @* <label>Materia</label>
             <div>
               
                
                    <InputSelect class="form-select" @bind-Value="@_UsuarioGeneral.MateriasEstudianteList">
                        @foreach (var item in _materiasTotales)
                        {
                             <option value="@item.NombresMaterias">@item.NombresMaterias</option>
                        }       
                            
                    </InputSelect>
                  

                   
                
             </div>*@
          @*<div class="form-group">
              <div class="form-group">
                  <button type="button" class="btn btn-secondary"
                  onclick="@(()=>@_UsuarioGeneral.MateriasEstudianteList.Add(new MateriasEstudiante()))">Agregar Materias</button>
              </div>
               <label>Materia</label>
                 @foreach (var EnviarMaterias in _UsuarioGeneral.MateriasEstudianteList )
                { 
                    <InputSelect class="form-select" @bind-Value="@EnviarMaterias.NombresMaterias">
                                @foreach (var item in _materiasTotales)
                                {
                                    <option value="@item.NombresMaterias">@item.NombresMaterias</option>
                    
                               }
                    </InputSelect>
                    
                }
              @for (var i = 0; i < @_UsuarioGeneral.MateriasEstudianteList.Count; i++)
              {
                var indice = i;
                var materias = @_UsuarioGeneral.MateriasEstudianteList[i];
                <h5>Materia @(i+1)</h5>
                <div class="form-group">
                    <label>Materia</label>
                   
                </div>
                  @foreach (var EnviarMaterias in _UsuarioGeneral.MateriasEstudianteList )
                { 
                    <InputSelect class="form-select" @bind-Value="@EnviarMaterias.NombresMaterias">
                                <option value="">I</option>
                                <option value="">II</option>
                                <option value="">III</option>
                    </InputSelect>
                    
                }
                 
                        
                        
                  
              }
              
                      
          </div>*@
         
     </div>
     <button type="submit" class="btn btn-success">@NombredelBoton</button>
     <DataAnnotationsValidator/>
</EditForm>

@code {

    //CarrerasTotalesUni[]? _Carreras { get; set; }
    //MateriasTotalesUni[]? _materiasTotales{ get; set; }
    //CarreraEstudiante? estudiantesCarr{ get; set; }



    [Parameter] public Usuarios _UsuarioGeneral { get; set; } = new Usuarios();
    [Parameter] public  string NombredelBoton { get; set; } = "Guardar Usuario";
    [Parameter] public EventCallback OnValidSumit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await CargarSelectCarrera();
       //await CargarSelectMaterias();
    }

    //async Task CargarSelectCarrera()
    //{
    //    _Carreras = await _http.GetFromJsonAsync<CarrerasTotalesUni[]>("CarrerasGenerales");
       
    //}
    //async Task CargarSelectMaterias()
    //{
    //    _materiasTotales = await _http.GetFromJsonAsync<MateriasTotalesUni[]>("MateriasGenerales");
       
    //}

}
